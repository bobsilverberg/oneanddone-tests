#!/usr/bin/env python

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import pytest

from pages.home import HomePage


class TestLogin:

    @pytest.mark.credentials
    def test_that_a_new_user_can_login(self, mozwebqa, new_user):
        home_page = HomePage(mozwebqa)
        home_page.go_to_page()
        assert not home_page.is_user_logged_in

        user_profile_edit_page = home_page.login(new_user, 'user_profile_edit')
        assert user_profile_edit_page.is_the_current_page
        assert user_profile_edit_page.is_user_logged_in

        user_profile_edit_page.enter_name(new_user['profile']['name'])
        # using default username generated by application
        assert user_profile_edit_page.is_privacy_policy_checkbox_checked
        logged_in_home_page = user_profile_edit_page.click_save_button('home_page')

        assert new_user['profile']['name'].upper() in logged_in_home_page.header.profile_link_text
        assert new_user['profile']['name'] in logged_in_home_page.displayed_profile_name

    @pytest.mark.credentials
    def test_that_name_of_existing_user_appears_on_login(self, mozwebqa, existing_user):
        home_page = HomePage(mozwebqa)
        home_page.go_to_page()
        assert not home_page.is_user_logged_in

        logged_in_home_page = home_page.login(existing_user, 'home_page')
        assert logged_in_home_page.is_the_current_page
        assert logged_in_home_page.is_user_logged_in

        assert existing_user['profile']['name'].upper() in logged_in_home_page.header.profile_link_text
        assert existing_user['profile']['name'] in logged_in_home_page.displayed_profile_name
